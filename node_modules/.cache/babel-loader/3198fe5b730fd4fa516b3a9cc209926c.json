{"ast":null,"code":"var _jsxFileName = \"/home/thiago/CursosTecnologia/GitHubRepositorios/ImersaoReactAlura/movie-trailer/src/components/FormField/index.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nconst FormFieldWraper = styled.input`\n`;\nconst Label = styled.label`\n`;\nconst Input = styled.input`\n  background: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n  \n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n  \n  padding: 16px 16px;\n  margin-bottom: 45px;\n  \n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n  \n  &:focus {\n    border-bottom-color: var(--primary);\n  }\n  &:focus:not([type='color']) + ${Label.Text} {\n    transform: scale(.6) translateY(-10px);\n  }\n  ${({\n  value\n}) => {\n  const hasValue = value.length > 0;\n  return hasValue && css`\n        &:not([type='color']) + ${Label.Text} {\n          transform: scale(.6) translateY(-10px);\n        }\n      `;\n}}\n`;\n\nfunction FormField({\n  label,\n  type,\n  name,\n  value,\n  onChange\n}) {\n  const fieldId = `id_${name}`;\n  const isTypeTextarea = type === 'textarea';\n  const tag = isTypeTextarea ? 'textarea' : 'input';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: fieldId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, label, \":\", /*#__PURE__*/React.createElement(Input, {\n    as: tag,\n    id: fieldId,\n    type: type,\n    value: value,\n    name: name,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {}\n};\nFormField.prototype = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default FormField;","map":{"version":3,"sources":["/home/thiago/CursosTecnologia/GitHubRepositorios/ImersaoReactAlura/movie-trailer/src/components/FormField/index.js"],"names":["React","PropTypes","styled","css","FormFieldWraper","input","Label","label","Input","Text","value","hasValue","length","FormField","type","name","onChange","fieldId","isTypeTextarea","tag","defaultProps","prototype","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AAEA,MAAMC,eAAe,GAAGF,MAAM,CAACG,KAAM;CAArC;AAGA,MAAMC,KAAK,GAAGJ,MAAM,CAACK,KAAM;CAA3B;AAGA,MAAMC,KAAK,GAAGN,MAAM,CAACG,KAAM;;;;;;;;;;;;;;;;;;;;;;;kCAuBOC,KAAK,CAACG,IAAK;;;IAGzC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACf,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAhC;AACA,SAAOD,QAAQ,IAAIR,GAAI;kCACOG,KAAK,CAACG,IAAK;;;OADzC;AAKD,CACF;CAlCD;;AAqCA,SAASI,SAAT,CAAoB;AAAEN,EAAAA,KAAF;AAASO,EAAAA,IAAT;AAAeC,EAAAA,IAAf;AAAqBL,EAAAA,KAArB;AAA4BM,EAAAA;AAA5B,CAApB,EAA4D;AAE1D,QAAMC,OAAO,GAAI,MAAKF,IAAK,EAA3B;AACA,QAAMG,cAAc,GAAGJ,IAAI,KAAK,UAAhC;AACA,QAAMK,GAAG,GAAGD,cAAc,GAAG,UAAH,GAAgB,OAA1C;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,OAAO,EAAED,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KADH,oBAEE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAEY,GADN;AAEE,IAAA,EAAE,EAAEF,OAFN;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,KAAK,EAAEJ,KAJT;AAKE,IAAA,IAAI,EAAEK,IALR;AAME,IAAA,QAAQ,EAAEC,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAeD;;AAEDH,SAAS,CAACO,YAAV,GAAyB;AACvBN,EAAAA,IAAI,EAAE,MADiB;AAEvBJ,EAAAA,KAAK,EAAE,EAFgB;AAGvBM,EAAAA,QAAQ,EAAE,MAAM,CAAE;AAHK,CAAzB;AAMAH,SAAS,CAACQ,SAAV,GAAsB;AACpBd,EAAAA,KAAK,EAAEN,SAAS,CAACqB,MAAV,CAAiBC,UADJ;AAEpBT,EAAAA,IAAI,EAAEb,SAAS,CAACqB,MAFI;AAGpBP,EAAAA,IAAI,EAAEd,SAAS,CAACqB,MAAV,CAAiBC,UAHH;AAIpBb,EAAAA,KAAK,EAAET,SAAS,CAACqB,MAJG;AAKpBN,EAAAA,QAAQ,EAAEf,SAAS,CAACuB;AALA,CAAtB;AAQA,eAAeX,SAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\n\nconst FormFieldWraper = styled.input`\n`;\n\nconst Label = styled.label`\n`;\n\nconst Input = styled.input`\n  background: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n  \n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n  \n  padding: 16px 16px;\n  margin-bottom: 45px;\n  \n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n  \n  &:focus {\n    border-bottom-color: var(--primary);\n  }\n  &:focus:not([type='color']) + ${Label.Text} {\n    transform: scale(.6) translateY(-10px);\n  }\n  ${({ value }) => {\n    const hasValue = value.length > 0;\n    return hasValue && css`\n        &:not([type='color']) + ${Label.Text} {\n          transform: scale(.6) translateY(-10px);\n        }\n      `;\n  }\n}\n`;\n\nfunction FormField( { label, type, name, value, onChange }) {\n  \n  const fieldId = `id_${name}`;\n  const isTypeTextarea = type === 'textarea';\n  const tag = isTypeTextarea ? 'textarea' : 'input';\n  \n  return (\n    <div>\n      <label htmlFor={fieldId}>\n        {label}: \n        <Input\n          as={tag}\n          id={fieldId}\n          type={type}\n          value={value}\n          name={name}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {},\n}\n\nFormField.prototype = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired, \n  value: PropTypes.string, \n  onChange: PropTypes.func,\n};\n\nexport default FormField;\n"]},"metadata":{},"sourceType":"module"}